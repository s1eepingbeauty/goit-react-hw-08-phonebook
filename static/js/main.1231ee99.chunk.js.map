{"version":3,"sources":["components/Header/styles.module.css","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/storage.js","redux/auth/auth-selectors.js","components/Header/Navigation.js","img/default-avatar.png","components/Header/UserMenu.js","components/Header/AuthNav.js","components/Header/AppBar.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","registerRequest","post","then","data","registerSuccess","catch","error","registerError","message","logIn","logInRequest","logInSuccess","logInError","logOut","logOutRequest","logOutSuccess","logOutError","getCurrentUser","getSate","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","loading","createReducer","items","_","payload","state","filter","id","combineReducers","initialUserState","name","email","user","setError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","getIsAuthenticated","getUserName","Navigation","isAutenticated","useSelector","className","styles","navigation","exact","to","navigationLink","activeClassName","navigationLinkActive","UserMenu","avatar","defaultAvatar","useDispatch","userMenu","src","alt","width","type","onClick","AuthNav","authNav","authNavLink","AppBar","appBar","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","HomeView","lazy","LogInView","RegistrationView","ContactsView","App","useEffect","fallback","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1231ee99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"styles_appBar__2V48s\",\"navigation\":\"styles_navigation__2mhi_\",\"navigationLinkActive\":\"styles_navigationLinkActive__2GWGK\",\"authNav\":\"styles_authNav__3SbLd\",\"authNavLink\":\"styles_authNavLink__OSW33\",\"userMenu\":\"styles_userMenu__1LlKX\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\n","import axios from 'axios';\nimport {\n  getCurrentUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  logInError,\n  logInRequest,\n  logInSuccess,\n  logOutError,\n  logOutRequest,\n  logOutSuccess,\n  registerError,\n  registerRequest,\n  registerSuccess,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`; //Bearer - носитель token\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем token в HTTP-заголовок\n */\nexport const register = credentials => dispatch => {\n  dispatch(registerRequest());\n  axios\n    .post('/users/signup', credentials)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(registerSuccess(data));\n    })\n    .catch(error => dispatch(registerError(error.message)));\n};\n\n/*\n * POST @ /users/login\n * body { email, password }\n *\n * После успешного logIn добавляем token в HTTP-заголовок\n */\nexport const logIn = credentials => dispatch => {\n  dispatch(logInRequest());\n  axios\n    .post('/users/login', credentials)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(logInSuccess(data));\n    })\n    .catch(error => dispatch(logInError(error.message)));\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * После успешного logOut удаляем token из HTTP-заголовка\n */\nexport const logOut = () => dispatch => {\n  dispatch(logOutRequest());\n  axios\n    .post('/users/logout')\n    .then(() => {\n      token.unset();\n      dispatch(logOutSuccess());\n    })\n    .catch(error => dispatch(logOutError(error.message)));\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем token из state через getState()\n * 2. Если token нет - выходим, не выполняя никаких операций\n * 3. Если token есть - добавляем его в HTTP-заголовок и выполняем операцию\n */\nexport const getCurrentUser = () => (dispatch, getSate) => {\n  const {\n    auth: { token: persistedToken },\n  } = getSate();\n\n  if (!persistedToken) return;\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  axios\n    .get('/users/current')\n    .then(({ data }) => dispatch(getCurrentUserSuccess(data)))\n    .catch(error => dispatch(getCurrentUserError(error.message)));\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const logInRequest = createAction('auth/logInRequest');\nexport const logInSuccess = createAction('auth/logInSuccess');\nexport const logInError = createAction('auth/logInError');\n\nexport const logOutRequest = createAction('auth/logOutRequest');\nexport const logOutSuccess = createAction('auth/logOutSuccess');\nexport const logOutError = createAction('auth/logOutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n//import { fetchContactsAsync } from './contacts-operations';\n\nconst loading = createReducer(false, {\n  // [fetchContactsAsync.pending]: () => true,\n  // [fetchContactsAsync.fulfilled]: () => false,\n  // [fetchContactsAsync.rejected]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst items = createReducer([], {\n   //[fetchContactsAsync.fulfilled]: (_, { payload }) => payload,\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  logInSuccess,\n  logInError,\n  logOutSuccess,\n  logOutError,\n  registerSuccess,\n  registerError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [logInSuccess]: (_, { payload }) => payload.user,\n  [logOutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [logInSuccess]: (_, { payload }) => payload.token,\n  [logOutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [logInError]: setError,\n  [logOutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [logInSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [logOutSuccess]: () => false,\n  [registerError]: () => false,\n  [logInError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getIsAuthenticated = state => state.auth.isAuthenticated;\nexport const getUserName = state => state.auth.user.name;\n","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\nimport styles from './styles.module.css';\n\nconst Navigation = () => {\n  const isAutenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <nav className={styles.navigation}>\n      <NavLink\n        exact\n        to=\"/\"\n        className={styles.navigationLink}\n        activeClassName={styles.navigationLinkActive}\n      >\n        Home\n      </NavLink>\n      {isAutenticated && (\n        <NavLink\n          exact\n          to=\"/contacts\"\n          className={styles.navigationLink}\n          activeClassName={styles.navigationLinkActive}\n        >\n          &nbsp;&nbsp; Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/default-avatar.10691648.png\";","import { useSelector, useDispatch } from 'react-redux';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\nimport defaultAvatar from '../../img/default-avatar.png';\nimport styles from './styles.module.css';\n\nconst UserMenu = () => {\n  const name = useSelector(getUserName);\n  const avatar = defaultAvatar;\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.userMenu}>\n      <img src={avatar} alt=\"user avatar\" width=\"30\" />\n      <span>Welcome, {name}!</span>\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\n        LogOut\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import { NavLink } from 'react-router-dom';\nimport styles from './styles.module.css';\n\nconst AuthNav = () => (\n  <div className={styles.authNav}>\n    <NavLink exact to=\"/login\" className={styles.authNavLink}>\n      Login\n    </NavLink>\n    &nbsp;&nbsp;\n    <NavLink exact to=\"/register\" className={styles.authNavLink}>\n      Registration\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\nimport styles from './styles.module.css';\n\nconst AppBar = () => {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  return (\n    <header className={styles.appBar}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут private и пользователь залогинен - показываем компонент\n * - Иначе Redirect на /login (redirectTo)\n */\n\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\n  const isAutenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAutenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный (если пользователь залогинен, \n * он по тому маршруту не должен пойти) - Redirect на /contacts (redirectTo)\n * - Иначе рендерим компонент\n */\n\nconst PublicRoute = ({ component: Component, redirectTo, ...routeProps }) => {\n  const isAutenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAutenticated && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport AppBar from './components/Header/AppBar';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst LogInView = lazy(() => import('./views/LogInView'));\nconst RegistrationView = lazy(() => import('./views/RegistrationView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  });\n\n  return (\n    <>\n      <AppBar />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            redirectTo=\"/contacts\"\n            restricted\n            component={RegistrationView}\n          />\n          <PublicRoute\n            path=\"/login\"\n            redirectTo=\"/contacts\"\n            restricted\n            component={LogInView}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsView}\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/storage';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}